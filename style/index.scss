$breakpoints: (
  'max': 'screen and (max-width: 766px)',
  'min': 'screen and (min-width: 767px)',
) !default;
@mixin mq($breakpoint: min){
  @media #{map-get($breakpoints, $breakpoint)}{
    @content;
  }
}
@import url('https://fonts.googleapis.com/css?family=Bebas+Neue|Roboto&display=swap');
$colorPrimary: #6c72fe;
$colorLight: #a4a1ff;
$colorDark: #2b47ca;
$svgArrow: url('data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20width%3D%22256%22%20height%3D%22256%22%3E%3Cpath%20fill%3D%22%23fff%22%20d%3D%22M471.452%20202.72L284.665%20389.506V12.742h-57.341v376.764L40.539%20202.72%200%20243.258l256%20256%20256-256z%22%2F%3E%3C%2Fsvg%3E');

#main{
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #eee;
}

$animationDuration: 210;
.card{
  $COUNT_SIZE: 50;
  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
  border-radius: 3px;
  background-color: $colorPrimary;
  padding: 50px 50px #{ 50 + $COUNT_SIZE }px 50px;
  z-index: 1;
  @include mq(max){
  padding: 30px 30px #{ 30 + $COUNT_SIZE }px 30px;
  }
  &[data-action="true"]{
    background-color: $colorLight;
    animation: fade ease;
    animation-duration: #{ $animationDuration }ms;
    @keyframes fade{
      from{
        background-color: $colorLight;
      }
      to{
        background-color: $colorPrimary;
      }
    }
  }
  &__title{
    font-family: 'Bebas Neue', cursive;
    text-align: center;
    font-size: 60px;
    color: #fff;
    @include mq(max){
      font-size: 40px;
    }
  }
  &__wrap{
    position: relative;
    &__count{
      background-color: #fff;
      border-radius: 50%;
      color: $colorPrimary;
      width: #{ $COUNT_SIZE }px;
      height: #{ $COUNT_SIZE }px;
      display: flex;
      font-weight: bold;
      font-size: 30px;
      user-select: none;
      justify-content: center;
      align-items: center;
      margin: 0 auto;
      margin-top: #{ $COUNT_SIZE * 1.5 }px;
      &:before{
        position: absolute;
        z-index: -1;
        content: "";
        left: 0;
        right: 0;
        margin: auto;
        background: rgba(255, 255, 255, .26);
        border-radius: #{ $COUNT_SIZE }px;
        width: #{ $COUNT_SIZE }px;
        height: #{ $COUNT_SIZE * 2.5 }px;
      }
      %__PLAS_MINUS{
        $pseudoSize: 24;
        position: absolute;
        font-weight: bold;
        right: 0;
        left: 0;
        content: "";
        margin: auto;
        width: #{ $pseudoSize }px;
        height: #{ $pseudoSize }px;
        background-image: $svgArrow;
        background-size: 20px;
        background-position: center;
        background-repeat: no-repeat;
        opacity: .4;
        
        @mixin arrowAnim(){
          animation: fadePseudo ease;
          animation-duration: #{ $animationDuration }ms;
          @keyframes fadePseudo{
            from{
              opacity: 1;
            }
            to{
              opacity: .4;
            }
          }
        }
        &[data-direction="false"]{
          &:before{
            @include arrowAnim();
          }
        }
        &[data-direction="true"]{
          &:after{
            @include arrowAnim();
          }
        }
      }
      span{
        line-height: 1;
        &:before{
          @extend %__PLAS_MINUS;
          top: #{ $COUNT_SIZE + 4 }px;
        }
        &:after{
          @extend %__PLAS_MINUS;
          bottom: #{ $COUNT_SIZE + 4 }px;
          transform: rotate(180deg);
        }
      }
    }
  }

}

